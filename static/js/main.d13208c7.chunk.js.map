{"version":3,"sources":["components/Timeline/SeekerBar.tsx","components/Timeline/Timeline.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SeekerBar","milestones","curIndex","setIndex","NodeContainer","length","map","index","label","active","progress","ProgressBar","ProgressBarContainer","ProgressBarProgress","SeekerNode","StyledNode","onClick","styled","div","props","Present","event","MilestoneDisplay","media","Future","setActive","MilestonePreview","preview","Past","TimelineContainer","Timeline","useState","current","setCurrent","isFirst","isLast","onWheel","e","yOffset","deltaY","console","log","Math","max","min","floor","Home","Messages","App","className","exact","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d13208c7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\ninterface INodeProps {\n  active: boolean;\n  label: string;\n  setIndex: () => void;\n}\n\ninterface ISeekerBarProps {\n  milestones: Milestone[];\n  curIndex: number;\n  setIndex: (index: number) => void;\n  progress: number;\n}\n\nexport const SeekerBar = ({\n  milestones,\n  curIndex,\n  setIndex,\n}: ISeekerBarProps): JSX.Element => (\n  <NodeContainer>\n    {milestones.length > 1 &&\n      milestones.map(({ label }, index) => (\n        <SeekerNode\n          key={index}\n          label={label}\n          active={index === curIndex}\n          setIndex={() => setIndex(index)}\n        />\n      ))}\n    <ProgressBar progress={50} />\n  </NodeContainer>\n);\n\nconst ProgressBar = ({ progress }: { progress: number }) => {\n  return (\n    <ProgressBarContainer>\n      <ProgressBarProgress />\n    </ProgressBarContainer>\n  );\n};\n\nconst SeekerNode = ({ label, setIndex, active }: INodeProps) => {\n  return (\n    <StyledNode onClick={setIndex} active={active}>\n      <span>{label}</span>\n    </StyledNode>\n  );\n};\n\nconst ProgressBarContainer = styled.div``;\n\nconst ProgressBarProgress = styled.div``;\n\nconst NodeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  //position: relative;\n  background: #666666;\n`;\n\nconst StyledNode = styled.div<{ active: boolean }>`\n  background: ${(props) => (props.active ? \"blue\" : \"red\")};\n  margin: 15px;\n  min-width: 1rem;\n  min-height: 1rem;\n  padding: 5px;\n`;\n","import React, { useState } from \"react\";\nimport { SeekerBar } from \"./SeekerBar\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\nlet progress = 0;\nconst Timeline = ({ milestones }: { milestones: Milestone[] }): JSX.Element => {\n  // const { events } = props;\n  const [current, setCurrent] = useState(0);\n  const isFirst = current === 0;\n  const isLast = current === milestones.length - 1;\n\n  const scrollStrength = 20;\n  //Seeker progress for the milestones\n\n  const trackScroll = (e: { deltaY: number }) => {\n    const { deltaY: yOffset } = e;\n    console.log(\"call\");\n    console.log(progress);\n    progress += (yOffset / 100) * scrollStrength;\n    progress = Math.max(0, progress);\n    progress = Math.min(progress, (milestones.length - 1) * 100);\n    if (Math.floor(progress / 100) !== current)\n      setCurrent(Math.floor(progress / 100));\n  };\n\n  const setIndex = (index: number) => {\n    progress = index * 100;\n    setCurrent(index);\n  };\n\n  return (\n    <>\n      <TimelineContainer onWheel={trackScroll}>\n        {!isFirst && (\n          <Past\n            media={milestones[current - 1].media}\n            setActive={() => setIndex(current - 1)}\n          />\n        )}\n        <Present event={milestones[current]} />\n        {!isLast && (\n          <Future\n            media={milestones[current + 1].media}\n            setActive={() => setIndex(current + 1)}\n          />\n        )}\n      </TimelineContainer>\n      <SeekerBar\n        milestones={milestones}\n        curIndex={current}\n        setIndex={setIndex}\n        progress={progress}\n      />\n    </>\n  );\n};\n\nfunction Present({ event }: { event: Milestone }) {\n  return (\n    <MilestoneDisplay media={event.media}>\n      <span>{event.label}</span>\n    </MilestoneDisplay>\n  );\n}\n\nfunction Future({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nfunction Past({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nconst TimelineContainer = styled.div`\n  //height: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n`;\n\nconst MilestoneDisplay = styled.div<{ media: Milestone[\"media\"] }>`\n  background: url(${(props) => props.media}) center;\n\n  flex: 5;\n`;\nconst MilestonePreview = styled.div<{ preview: Milestone[\"media\"] }>`\n  background: url(${(props) => props.preview}) center;\n  flex: 1;\n`;\n\nexport default Timeline;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { Milestone } from \"./components/Timeline/Milestone\";\n\nconst App = (): JSX.Element => (\n  <Router>\n    <div className=\"App\">\n      <nav className=\"Header\">\n        <NavLink exact to=\"/\">\n          Home\n        </NavLink>\n        <NavLink to=\"/messages\">Messages</NavLink>\n        <NavLink to=\"/timeline\">Timeline</NavLink>\n      </nav>\n\n      <div className=\"Content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/messages\">\n            <Messages />\n          </Route>\n          <Route path=\"/timeline\">\n            <Timeline milestones={milestones} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  </Router>\n);\n\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n  </div>\n);\n\nconst Messages = () => (\n  <div>\n    <h2>Messages</h2>\n  </div>\n);\n\nconst milestones: Milestone[] = [\n  {\n    label: \"debut\",\n    media: \"https://via.placeholder.com/1920x1080/0F0\",\n  },\n  {\n    label: \"1\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"2\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"3\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"4\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"5\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"6\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n];\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}