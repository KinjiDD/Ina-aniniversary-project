{"version":3,"sources":["components/Timeline/SeekerBar.tsx","components/Timeline/Timeline.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SeekerBar","milestones","curIndex","setIndex","length","nodeMapRef","useRef","map","createRef","console","log","current","NodeContainer","index","label","ref","active","passed","position","offsetLeft","Progress","BarContainer","ProgressBar","progress","styled","div","SeekerNode","React","forwardRef","props","StyledNode","onClick","Present","event","MilestoneDisplay","media","Future","setActive","MilestonePreview","preview","Past","TimelineContainer","Timeline","timelineRef","useState","cur","setCur","isFirst","isLast","onWheel","e","yOffset","deltaY","Math","max","min","floor","Home","Messages","App","className","exact","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a17cf269.chunk.js","sourcesContent":["import React, {\n  createRef,\n  ForwardedRef,\n  MutableRefObject,\n  RefObject,\n  useRef,\n} from \"react\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\ninterface INodeProps {\n  active: boolean;\n  passed: boolean;\n  label: string;\n  ref: MutableRefObject<HTMLInputElement>;\n  setIndex: () => void;\n}\n\ninterface ISeekerBarProps {\n  milestones: Milestone[];\n  curIndex: number;\n  setIndex: (index: number) => void;\n  progress: number;\n}\n\nexport const SeekerBar = ({\n  milestones,\n  curIndex,\n  setIndex,\n}: ISeekerBarProps): JSX.Element | null => {\n  if (!milestones.length) return null;\n  const nodeMapRef = useRef<RefObject<HTMLInputElement>[]>(\n    milestones.map(() => createRef())\n  );\n  console.log(nodeMapRef.current);\n  return (\n    <NodeContainer>\n      {milestones.map(({ label }, index) => (\n        <SeekerNode\n          key={index}\n          label={label}\n          ref={nodeMapRef.current[index]}\n          active={index === curIndex}\n          passed={index < curIndex}\n          setIndex={() => setIndex(index)}\n        />\n      ))}\n      <Progress\n        position={nodeMapRef.current[curIndex].current?.offsetLeft ?? 0}\n      />\n    </NodeContainer>\n  );\n};\n\nconst Progress = ({ position }: { position: number }) => {\n  return (\n    <BarContainer>\n      <ProgressBar progress={position} />\n    </BarContainer>\n  );\n};\n\nconst BarContainer = styled.div`\n  width: 100%;\n  height: 10%;\n  position: absolute;\n  z-index: 0;\n  top: 45%;\n  margin-left: 0.25em;\n`;\n\nconst ProgressBar = styled.div<{ progress: number }>`\n  width: ${({ progress }) => progress}px;\n  transition: width 0.25s linear;\n  background-color: #f29a31;\n  height: 100%;\n`;\n\nconst SeekerNode = React.forwardRef<HTMLInputElement, INodeProps>(\n  function SeekerNode(\n    { setIndex, ...props }: INodeProps,\n    ref: ForwardedRef<HTMLInputElement>\n  ) {\n    return (\n      <StyledNode {...props} onClick={setIndex} ref={ref}>\n        {/*<span>{label}</span>*/}\n      </StyledNode>\n    );\n  }\n);\n\nconst StyledNode = styled.div<{ active: boolean; passed: boolean }>`\n  background: #fff;\n  border: 0.35rem solid\n    ${({ active, passed }) =>\n      active ? \"#F29A31\" : passed ? \"#E1D9EF\" : \"#564F68\"};\n  border-radius: 50%;\n  margin: 1rem 0;\n  min-width: 0.7rem;\n  min-height: 0.7rem;\n  padding: 5px;\n  z-index: 2;\n`;\n\nconst NodeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  //position: relative;\n  background: #666666;\n  padding: 0 1em;\n  position: relative;\n  overflow: hidden;\n`;\n","import React, { useRef, useState } from \"react\";\nimport { SeekerBar } from \"./SeekerBar\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\nconst Timeline = ({ milestones }: { milestones: Milestone[] }): JSX.Element => {\n  // const { events } = props;\n  const timelineRef = useRef(0);\n\n  const [cur, setCur] = useState(0);\n  const isFirst = cur === 0;\n  const isLast = cur === milestones.length - 1;\n\n  const scrollStrength = 20;\n  //Seeker progress for the milestones\n\n  const trackScroll = (e: { deltaY: number }) => {\n    const { deltaY: yOffset } = e;\n\n    timelineRef.current += (yOffset / 100) * scrollStrength;\n    timelineRef.current = Math.max(0, timelineRef.current);\n    timelineRef.current = Math.min(\n      timelineRef.current,\n      (milestones.length - 1) * 100\n    );\n    if (Math.floor(timelineRef.current / 100) !== cur)\n      setCur(Math.floor(timelineRef.current / 100));\n  };\n\n  const setIndex = (index: number) => {\n    timelineRef.current = index * 100;\n    setCur(index);\n  };\n\n  return (\n    <>\n      <TimelineContainer onWheel={trackScroll}>\n        {!isFirst && (\n          <Past\n            media={milestones[cur - 1].media}\n            setActive={() => setIndex(cur - 1)}\n          />\n        )}\n        <Present event={milestones[cur]} />\n        {!isLast && (\n          <Future\n            media={milestones[cur + 1].media}\n            setActive={() => setIndex(cur + 1)}\n          />\n        )}\n      </TimelineContainer>\n      <SeekerBar\n        milestones={milestones}\n        curIndex={cur}\n        setIndex={setIndex}\n        progress={timelineRef.current}\n      />\n    </>\n  );\n};\n\nfunction Present({ event }: { event: Milestone }) {\n  return (\n    <MilestoneDisplay media={event.media}>\n      <span>{event.label}</span>\n    </MilestoneDisplay>\n  );\n}\n\nfunction Future({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nfunction Past({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nconst TimelineContainer = styled.div`\n  //height: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n`;\n\nconst MilestoneDisplay = styled.div<{ media: Milestone[\"media\"] }>`\n  background: url(${(props) => props.media}) center;\n\n  flex: 5;\n`;\nconst MilestonePreview = styled.div<{ preview: Milestone[\"media\"] }>`\n  background: url(${(props) => props.preview}) center;\n  flex: 1;\n`;\n\nexport default Timeline;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, NavLink, HashRouter } from \"react-router-dom\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { Milestone } from \"./components/Timeline/Milestone\";\n\nconst App = (): JSX.Element => (\n  <HashRouter>\n    <div className=\"App\">\n      <nav className=\"Header\">\n        <NavLink exact to=\"/\">\n          Home\n        </NavLink>\n        <NavLink to=\"/messages\">Messages</NavLink>\n        <NavLink to=\"/timeline\">Timeline</NavLink>\n      </nav>\n\n      <div className=\"Content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/messages\">\n            <Messages />\n          </Route>\n          <Route path=\"/timeline\">\n            <Timeline milestones={milestones} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  </HashRouter>\n);\n\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n  </div>\n);\n\nconst Messages = () => (\n  <div>\n    <h2>Messages</h2>\n  </div>\n);\n\nconst milestones: Milestone[] = [\n  {\n    label: \"debut\",\n    media: \"https://via.placeholder.com/1920x1080/0F0\",\n  },\n  {\n    label: \"1\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"2\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"3\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"4\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"5\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"6\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n];\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}